package ru.stimmax.ru.stimmax.lessons.lesson03.homework

// 1. Название мероприятия (неизменяемая публичная переменная известная на момент написания)
val name: String = "Kotlin Course Hackathon"

// 2. Дата проведения (публичная переменная известная на момент написания, но может быть изменена из-за переноса)
var date: String = "10 ноября 2025"

// 3. Место проведения (публичная переменная известная на момент написания, но может быть изменена из-за форс-мажора)
var eventLocation: String = "Antalya"

// 4. Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы.
// (приватная неизменяемая переменная - её не должны увидеть и бюджет уже запланирован
// и утверждён и не должен изменяться)
private val budget: String = "подробная информация с перечислением поставщиков и сумм для внутреннего пользования"

// 5. Количество участников (публичная переменная, возможное количество участников в команде, не изменяется)
const val totalParticipantsPerTeam: Int = 5

// 6. Длительность хакатона (публичная переменная, известно на момент написания, считается в днях, не изменяется)
const val hackathonDuration: Int = 2

// 7. Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг.
// (приватная переменная, доступно только организаторам, может меняться во время подготовки)
private var supplierContactsAndAgreements: String = "agreements"

// 8. Текущее состояние хакатона (статус) (публичная переменная, изменяется со временем)
public var hackathonStatus: String
    public get() = "прием заявок"
    private set(value) = TODO()

// 9. Список спонсоров (публичная переменная, доступна всем, изменяется со временем)
public var sponsorsList: String
    public get() = "список"
    private set(value) = TODO()

// 10. Бюджет мероприятия (приватная переменная, постоянная, определена изначально)
private val eventBudget: Double = 1.5

// 11. Текущий уровень доступа к интернету (публичная переменная, будет определена в момент старта
// и может во время мероприятия)
lateinit var currentInternetAccessLevel: String

// 12. Информация о транспортировке оборудования, распределении ресурсов
// и координации между различными командами поддержки. (приватная переменная, доступна для организаторов, меняется
// со временем
private val equipmentAndSupportCoordination: String by lazy{
    "изменяется во времени, инициализируется в момент запроса"
}

// 13. Количество команд (публичная переменная, меняется со временем, во время подготовки)
var teamNumber: Int = 0

// 14. Перечень задач (публичная переменная, список формирует организатор, не изменяется)
val tasksList: String = "здесь должен быть список задач"

// 15. План эвакуации (публичная переменная, доступная всем, может быть изменена, если изменится место проведения)
var evacuationPlan: String = "план для эвакуации"

// 16. Список доступного оборудования (всё, что выделено для использования на мероприятии)
// (публичная переменная, доступная всем, не изменяется со временем)
val availableEquipment: String = "доступное оборудование"

// 17. Список свободного оборудования (всё, что можно взять прямо сейчас и что не занято другими участниками)
var freeEquipmentList: String
    get() {
        TODO()
    }
    set(value) {}

// 18. График питания участников (зависит от поставщика питания, определяемого за неделю до начала) (публичная изменяемая переменная с отложенной инициализацией, так как на момент создания поставщик и график не известны)
lateinit var mealSchedule: String

// 19. План мероприятий на случай сбоев (приватная переменная, которая доступна только организаторам, план может
// изменяться в случае новых непредвиденных сбоев
private var backupPlan: String = ""

// 20. Список экспертов и жюри (публичная переменная, может меняться на этапе подготовки)
lateinit var expertsAndJudges: String

// 21. Политика конфиденциальности (публичная переменная, не изменяется)
val privacyPolicy: String = "policy"

// 22. Приватные отзывы (фидбэк) участников и зрителей для анализа проблем.
val participantAndAudienceFeedback: String by lazy {
    "будут добавляться по ходу мероприятия"
}

// 23. Текущая температура в помещении (публичная переменная, доступна всем, будет определена в момент старта)
var roomTemperature: Double
    get() {
        TODO()
    }
    set(value) {}

// 24. Данные мониторинга и анализ производительности сетевого оборудования
// и интернет-соединения для целей отладки своих приложений командами
var networkPerformanceMonitoringData: String = "data"

// 25. Регулятор скорости интернета (понижающий коэффициент, например 0.5)
// (публичная переменная, может изменяться, конечное значение будет определено в момент старта мероприятия)
var internetSpeedLimiter: Double
    get() = 0.0
    set(value) = TODO()

// 26. Уровень освещения (публичная переменная, может меняться в зависимости от внешних условий)
lateinit var lightLevel: String

// 27. Лог событий мероприятия (приватная переменная, будет меняться во время мероприятия)
private val eventLog: String by lazy {
    "будет писаться"
}

// 28. Возможность получения медицинской помощи прямо на мероприятии (да/нет)
// (публичная переменная, доступна всем, не изменяется)
val onSiteMedicalCare: Boolean = true

// 29. Планы и процедуры для обеспечения безопасности мероприятия,
// включая планы эвакуации и протоколы чрезвычайных ситуаций. (публичная переменная, доступна всем участникам)
var safetyAndEvacuationProtocols: String = "plans"

// 30. Регистрационный номер мероприятия (публичная переменная, известна на момент написания, не меняется)
val eventRegistrationNumber: Int = 392843

// 31. Максимально допустимый уровень шума в помещении хакатона. (публичная переменная, не меняется со временем)
val maxNoiseLevel: Int = 90

// 32. Индикатор превышения уровня шума в помещениях (превышен или не превышен в данный момент) (публичная переменная,
// доступна всем участникам, будет меняться со временем)
var isNoiseExceeded: Boolean = false

// 33. План взаимодействия с прессой (приватная переменная, составляется перед началом, возможны изменения в процессе)
private var pressCommunicationPlan: String = "some plan"

// 34. Детальная публичная информация о проектах каждой команды,
// сбор данных включает в себя компиляцию кода и сбор статистики прогона автоматизированных проверок.
lateinit var teamProjectsPublicDetails: String

// 35. Статус получения всех необходимых разрешений для проведения мероприятия (приватная переменная, меняется со
// временем
private var permitsStatus: String = "initial status"

// 36. Индикатор доступности специализированного оборудования в данный момент (например, специальному оборудованию)
// (публичная переменная, меняется со временем)
var isSpecialEquipmentAvailable: Boolean = true

// 37. Список партнеров мероприятия (публичная переменная, может меняться со временем)
var partnersList: String = "partners"

// 38. Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия.
// (публичная переменная, будет доступна позже)
val eventFeedbackAndMedia: String by lazy {
    "будет позже"
}

// 39. Внутренние правила распределения призов (приватная переменная, доступна организаторам, не меняется со временем)
private val prizeRules: String = "rules"

// 40. Список разыгрываемых призов (публичная переменная, список определен и не меняется)
val prizesList: String = "prizes"

// 41. Контактная информация экстренных служб, медицинского персонала и других важных служб, для внутреннего пользования.
// (приватная переменная, может дополняться)
private var emergencyContacts: String = "list"

// 42. Особые условия для участников с ограниченными возможностями
// (публичная переменная, определяется перед мероприятием)
val accessibilityAccommodations: String = "accessibilityAccommodations"

// 43. Общее настроение участников (определяется опросами) (публичная переменная, меняется со временем, будет
// определяться во время мероприятия
lateinit var participantMood: String

// 44. Подробный план хакатона, включающий время и содержание каждого сегмента,
// инициализируется непосредственно перед началом мероприятия,
// так как зависит от фактического состава команд и взятых в работу задач.
val eventPlan: String by lazy{
    "will be initialized late"
}

// 45. Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия,
// но в момент инициализации неизвестно.
val specialGuestName: String by lazy {
    "имя будет озвучено позже"
}

// 46. Максимальное количество людей, которое может вместить место проведения.
//(приватная переменная, может измениться, если изменится место проведения)
var maxCapacity: Int = 500

// 47. Количество часов, отведенное каждой команде для работы над проектом.
// (публичная переменная, не меняется со временем)
val teamProjectHours: Int = 48

